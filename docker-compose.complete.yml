version: '3.8'

services:
  # Message Queue
  rabbitmq:
    image: rabbitmq:3-management
    container_name: poneglyph-rabbitmq-complete
    environment:
      RABBITMQ_DEFAULT_USER: poneglyph
      RABBITMQ_DEFAULT_PASS: poneglyph123
      RABBITMQ_DEFAULT_VHOST: /
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - poneglyph-network

  # Cache & State Management
  redis:
    image: redis:7-alpine
    container_name: poneglyph-redis-complete
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - poneglyph-network

  # gRPC Middleware
  middleware:
    build:
      context: ./PoneglyphMiddleware
      dockerfile: Dockerfile
    container_name: poneglyph-middleware-complete
    environment:
      RABBITMQ_URL: amqp://poneglyph:poneglyph123@rabbitmq:5672/
      REDIS_URL: redis://redis:6379
      GRPC_PORT: 50051
    ports:
      - "50051:50051"
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "python", "-c", "import socket; s=socket.socket(); s.connect(('localhost', 50051)); s.close()"]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - poneglyph-network
    restart: unless-stopped

  # C++ Workers
  worker1:
    build:
      context: ./Poneglyph
      dockerfile: Dockerfile.enhanced
    container_name: poneglyph-worker-1
    environment:
      GRPC_HOST: middleware
      GRPC_PORT: 50051
      RABBITMQ_URL: amqp://poneglyph:poneglyph123@rabbitmq:5672/
      REDIS_URL: redis://redis:6379
      WORKER_ID: cpp-worker-1
    depends_on:
      middleware:
        condition: service_healthy
    networks:
      - poneglyph-network
    restart: unless-stopped

  worker2:
    build:
      context: ./Poneglyph
      dockerfile: Dockerfile.enhanced
    container_name: poneglyph-worker-2
    environment:
      GRPC_HOST: middleware
      GRPC_PORT: 50051
      RABBITMQ_URL: amqp://poneglyph:poneglyph123@rabbitmq:5672/
      REDIS_URL: redis://redis:6379
      WORKER_ID: cpp-worker-2
    depends_on:
      middleware:
        condition: service_healthy
    networks:
      - poneglyph-network
    restart: unless-stopped

  worker3:
    build:
      context: ./Poneglyph
      dockerfile: Dockerfile.enhanced
    container_name: poneglyph-worker-3
    environment:
      GRPC_HOST: middleware
      GRPC_PORT: 50051
      RABBITMQ_URL: amqp://poneglyph:poneglyph123@rabbitmq:5672/
      REDIS_URL: redis://redis:6379
      WORKER_ID: cpp-worker-3
    depends_on:
      middleware:
        condition: service_healthy
    networks:
      - poneglyph-network
    restart: unless-stopped

  # Java Master (Road-Poneglyph)
  master:
    build:
      context: ./Road-Poneglyph
      dockerfile: Dockerfile.complete
    container_name: poneglyph-master-complete
    environment:
      GRPC_HOST: middleware
      GRPC_PORT: 50051
      JAVA_OPTS: "-Xmx1g -Xms512m"
    ports:
      - "8080:8080"
    depends_on:
      middleware:
        condition: service_healthy
    networks:
      - poneglyph-network
    restart: unless-stopped

  # Monitoring Dashboard (optional)
  dashboard:
    image: nginx:alpine
    container_name: poneglyph-dashboard
    ports:
      - "80:80"
    volumes:
      - ./dashboard:/usr/share/nginx/html
    networks:
      - poneglyph-network

volumes:
  rabbitmq_data:
    driver: local
  redis_data:
    driver: local

networks:
  poneglyph-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
